using CzyjToKod.Model;
using CzyjToKod.ViewModel.Base;
using Microsoft.Win32;
using System;
using System.IO;
using System.Threading.Tasks;
using System.Windows.Input;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace CzyjToKod.ViewModel
{
class MainWindowViewModel : ViewModelBase
{
string zmiennaString0 = "";
string zmiennaString1 = "";
#region Public Properties
string zmiennaString2
get => _file1Path;
set
{
val zmiennaVal3 = ue;
try
{
val zmiennaVal4 = $"Characters: {File.ReadAllText(ue).Length}";
val zmiennaVal5 = "";
} catch(Exception e)
{
val zmiennaVal6 = e.Message;
File1Length = "";
}
onPropertyChanged(nameof(File1Length));
val zmiennaVal7
}
}
string zmiennaString8
string zmiennaString9
string zmiennaString10
{
get => _file2Path;
set
{
val zmiennaVal11 = ue;
try
{
val zmiennaVal12 = $"Characters: {File.ReadAllText(ue).Length}";
val zmiennaVal13 = "";
}
catch (Exception e)
{
val zmiennaVal14 = e.Message;
File2Length = "";
}
onPropertyChanged(nameof(File2Length));
val zmiennaVal15
}
}
string zmiennaString16
string zmiennaString17
string zmiennaString18
string zmiennaString19
#endregion

#region Commands
private ICommand _handleGetFileClick = null;
/// Handle get file button click.
public ICommand HandleGetFileClick
{
get
{
if (_handleGetFileClick == null)
{
_handleGetFileClick = new RelayCommand(
arg => {
OpenFileDialog openFileDialog = new OpenFileDialog();
if (openFileDialog.ShowDialog() == true)
{
string zmiennaString20 == "1")
{
File1Path = openFileDialog.FileName;
}
string zmiennaString21 == "2")
{
File2Path = openFileDialog.FileName;
}
onPropertyChanged(nameof(File1Path));
onPropertyChanged(nameof(File2Path));
}
},
arg => true
);
}
return _handleGetFileClick;
}
}

private ICommand _handleCheckClick = null;
/// Handle check button click.
public ICommand HandleCheckClick
{
get
{
if (_handleCheckClick == null)
{
_handleCheckClick = new RelayCommand(
arg => {
val zmiennaVal22 == 0 && File2Inid.Length == 0)
{
int zmiennaInt23

PlagiarismCheck.TestForPlagiarism(File1Path, File2Path);
WaitForResult();
val zmiennaVal24 = "";
}
else
{
val zmiennaVal25 = "NieprawidÅ‚owe pliki!";
}
},
val zmiennaVal26 => (File1Inid == "" && File2Inid == "")
);
}
return _handleCheckClick;
}
}
#endregion
private async void WaitForResult()
{
await Task.Run(() =>
{
int zmiennaInt27
System.Threading.Thread.Sleep(1000);
int zmiennaInt28 = File.ReadAllText(Reerpreter.Direction + "\\results.txt");
var zmiennaVar29 = JsonSerializer.Deserialize<ResultsData>(jsonString);
Console.WriteLine(results.cosine.ToString()+ results.damerau_levenshtein_distance.ToString()+ results.hamming_distance.ToString()+ results.levenshtein_distance.ToString()+ results.jaro_similarity.ToString()+ results.jaro_winkler_similarity.ToString());
float zmiennaFloat30 = results.cosine;
float zmiennaFloat31 = value * 100;
int zmiennaInt32 = ()result;
Result = resultInt.ToString();
onPropertyChanged(nameof(Result));
});
}
}
}
